name: Deploy Lambda

on:
  workflow_dispatch:
    inputs:
      lambda:
        type: choice
        required: true
        description: Lambda to deploy
        options:
          - sanctumlab-api-lambda
          - sanctumlab-authorizer

permissions:
  id-token: write
  contents: read

jobs:
  deploy-api:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: npm
      - name: Configure Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_IAM }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Cache Dependencies
        id: cache-dependencies
        uses: actions/cache@v4
        with:
          path: |
            node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install dependencies
        run: |
          if [ ${{ steps.cache-dependencies.outputs.cache-hit }} == 'true' ]; then
            echo "Cache hit: Running 'npm install'"
            npm install
          else
            echo "Cache miss: Running 'npm ci'"
            npm ci
          fi
      - name: Build sources
        run: npm run build:${{ github.event.inputs.lambda }}
      - name: Package API Lambda
        run: |
          cd dist/apps/${{ github.event.inputs.lambda }}
          zip -r ../${{ github.event.inputs.lambda }}.zip .

        # Assign LAMBDA_FUNCTION_NAME based on the input lambda choice
      - name: Set Lambda Function Name for sanctumlab-api-lambda
        if: ${{ github.event.inputs.lambda == 'sanctumlab-api-lambda' }}
        run: echo "LAMBDA_FUNCTION_NAME=${{ secrets.AWS_LAMBDA_API_ARN }}" >> $GITHUB_ENV

      - name: Set Lambda Function Name for sanctumlab-authorizer
        if: ${{ github.event.inputs.lambda == 'sanctumlab-authorizer' }}
        run: echo "LAMBDA_FUNCTION_NAME=${{ secrets.AWS_LAMBDA_AUTHORIZER_ARN }}" >> $GITHUB_ENV

      - name: Deploy Lambda
        run: |
          aws lambda update-function-code \
            --function-name $LAMBDA_FUNCTION_NAME \
            --zip-file fileb://dist/apps/${{ github.event.inputs.lambda }}.zip
